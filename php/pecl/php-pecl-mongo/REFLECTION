Extension [ <persistent> extension #200 mongo version 1.6.14 ] {

  - Dependencies {
    Dependency [ openssl (Optional) ]
  }

  - INI {
    Entry [ mongo.default_host <ALL> ]
      Current = 'localhost'
    }
    Entry [ mongo.default_port <ALL> ]
      Current = '27017'
    }
    Entry [ mongo.chunk_size <ALL> ]
      Current = '261120'
    }
    Entry [ mongo.cmd <ALL> ]
      Current = '$'
    }
    Entry [ mongo.native_long <ALL> ]
      Current = '1'
    }
    Entry [ mongo.long_as_object <ALL> ]
      Current = '0'
    }
    Entry [ mongo.allow_empty_keys <ALL> ]
      Current = '0'
    }
    Entry [ mongo.ping_interval <ALL> ]
      Current = '5'
    }
    Entry [ mongo.is_master_interval <ALL> ]
      Current = '15'
    }
  }

  - Constants [27] {
    Constant [ integer MONGO_STREAMS ] { 1 }
    Constant [ integer MONGO_SUPPORTS_STREAMS ] { 1 }
    Constant [ integer MONGO_SUPPORTS_SSL ] { 1 }
    Constant [ integer MONGO_SUPPORTS_AUTH_MECHANISM_MONGODB_CR ] { 1 }
    Constant [ integer MONGO_SUPPORTS_AUTH_MECHANISM_MONGODB_X509 ] { 1 }
    Constant [ integer MONGO_SUPPORTS_AUTH_MECHANISM_SCRAM_SHA1 ] { 1 }
    Constant [ integer MONGO_SUPPORTS_AUTH_MECHANISM_GSSAPI ] { 1 }
    Constant [ integer MONGO_SUPPORTS_AUTH_MECHANISM_PLAIN ] { 1 }
    Constant [ integer MONGO_STREAM_NOTIFY_TYPE_IO_INIT ] { 100 }
    Constant [ integer MONGO_STREAM_NOTIFY_TYPE_LOG ] { 200 }
    Constant [ integer MONGO_STREAM_NOTIFY_IO_READ ] { 111 }
    Constant [ integer MONGO_STREAM_NOTIFY_IO_WRITE ] { 112 }
    Constant [ integer MONGO_STREAM_NOTIFY_IO_PROGRESS ] { 7 }
    Constant [ integer MONGO_STREAM_NOTIFY_IO_COMPLETED ] { 8 }
    Constant [ integer MONGO_STREAM_NOTIFY_LOG_INSERT ] { 211 }
    Constant [ integer MONGO_STREAM_NOTIFY_LOG_QUERY ] { 212 }
    Constant [ integer MONGO_STREAM_NOTIFY_LOG_UPDATE ] { 213 }
    Constant [ integer MONGO_STREAM_NOTIFY_LOG_DELETE ] { 214 }
    Constant [ integer MONGO_STREAM_NOTIFY_LOG_GETMORE ] { 215 }
    Constant [ integer MONGO_STREAM_NOTIFY_LOG_KILLCURSOR ] { 216 }
    Constant [ integer MONGO_STREAM_NOTIFY_LOG_BATCHINSERT ] { 217 }
    Constant [ integer MONGO_STREAM_NOTIFY_LOG_RESPONSE_HEADER ] { 218 }
    Constant [ integer MONGO_STREAM_NOTIFY_LOG_WRITE_REPLY ] { 219 }
    Constant [ integer MONGO_STREAM_NOTIFY_LOG_CMD_INSERT ] { 220 }
    Constant [ integer MONGO_STREAM_NOTIFY_LOG_CMD_UPDATE ] { 221 }
    Constant [ integer MONGO_STREAM_NOTIFY_LOG_CMD_DELETE ] { 222 }
    Constant [ integer MONGO_STREAM_NOTIFY_LOG_WRITE_BATCH ] { 223 }
  }

  - Functions {
    Function [ <internal:mongo> function bson_encode ] {
    }
    Function [ <internal:mongo> function bson_decode ] {
    }
  }

  - Classes [37] {
    Class [ <internal:mongo> class MongoClient ] {

      - Constants [8] {
        Constant [ string DEFAULT_HOST ] { localhost }
        Constant [ integer DEFAULT_PORT ] { 27017 }
        Constant [ string VERSION ] { 1.6.14 }
        Constant [ string RP_PRIMARY ] { primary }
        Constant [ string RP_PRIMARY_PREFERRED ] { primaryPreferred }
        Constant [ string RP_SECONDARY ] { secondary }
        Constant [ string RP_SECONDARY_PREFERRED ] { secondaryPreferred }
        Constant [ string RP_NEAREST ] { nearest }
      }

      - Static properties [0] {
      }

      - Static methods [2] {
        Method [ <internal:mongo> static public method getConnections ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> static public method killCursor ] {

          - Parameters [1] {
            Parameter #0 [ <required> $cursor_id ]
          }
        }
      }

      - Properties [4] {
        Property [ <default> public $connected ]
        Property [ <default> public $status ]
        Property [ <default> protected $server ]
        Property [ <default> protected $persistent ]
      }

      - Methods [14] {
        Method [ <internal:mongo, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $server ]
            Parameter #1 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo> public method connect ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method __get ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:mongo> public method selectDB ] {

          - Parameters [1] {
            Parameter #0 [ <required> $database_name ]
          }
        }

        Method [ <internal:mongo> public method selectCollection ] {

          - Parameters [2] {
            Parameter #0 [ <required> $database_name ]
            Parameter #1 [ <optional> $collection_name ]
          }
        }

        Method [ <internal:mongo> public method getReadPreference ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method setReadPreference ] {

          - Parameters [2] {
            Parameter #0 [ <required> $read_preference ]
            Parameter #1 [ <optional> array $tags ]
          }
        }

        Method [ <internal:mongo> public method getWriteConcern ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method setWriteConcern ] {

          - Parameters [2] {
            Parameter #0 [ <required> $w ]
            Parameter #1 [ <optional> $wtimeout ]
          }
        }

        Method [ <internal:mongo> public method dropDB ] {

          - Parameters [1] {
            Parameter #0 [ <required> $MongoDB_object_OR_database_name ]
          }
        }

        Method [ <internal:mongo> public method listDBs ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method getHosts ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method close ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:mongo> class Mongo extends MongoClient ] {

      - Constants [8] {
        Constant [ string DEFAULT_HOST ] { localhost }
        Constant [ integer DEFAULT_PORT ] { 27017 }
        Constant [ string VERSION ] { 1.6.14 }
        Constant [ string RP_PRIMARY ] { primary }
        Constant [ string RP_PRIMARY_PREFERRED ] { primaryPreferred }
        Constant [ string RP_SECONDARY ] { secondary }
        Constant [ string RP_SECONDARY_PREFERRED ] { secondaryPreferred }
        Constant [ string RP_NEAREST ] { nearest }
      }

      - Static properties [0] {
      }

      - Static methods [5] {
        Method [ <internal, deprecated:mongo> static public method setPoolSize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $size ]
          }
        }

        Method [ <internal, deprecated:mongo> static public method getPoolSize ] {

          - Parameters [0] {
          }
        }

        Method [ <internal, deprecated:mongo> static public method poolDebug ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoClient> static public method getConnections ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoClient> static public method killCursor ] {

          - Parameters [1] {
            Parameter #0 [ <required> $cursor_id ]
          }
        }
      }

      - Properties [4] {
        Property [ <default> public $connected ]
        Property [ <default> public $status ]
        Property [ <default> protected $server ]
        Property [ <default> protected $persistent ]
      }

      - Methods [23] {
        Method [ <internal:mongo, overwrites MongoClient, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $server ]
            Parameter #1 [ <optional> array $options ]
          }
        }

        Method [ <internal, deprecated:mongo> protected method connectUtil ] {

          - Parameters [0] {
          }
        }

        Method [ <internal, deprecated:mongo> public method getSlaveOkay ] {

          - Parameters [0] {
          }
        }

        Method [ <internal, deprecated:mongo> public method setSlaveOkay ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $slave_okay ]
          }
        }

        Method [ <internal, deprecated:mongo> public method lastError ] {

          - Parameters [0] {
          }
        }

        Method [ <internal, deprecated:mongo> public method prevError ] {

          - Parameters [0] {
          }
        }

        Method [ <internal, deprecated:mongo> public method resetError ] {

          - Parameters [0] {
          }
        }

        Method [ <internal, deprecated:mongo> public method forceError ] {

          - Parameters [0] {
          }
        }

        Method [ <internal, deprecated:mongo> public method getSlave ] {

          - Parameters [0] {
          }
        }

        Method [ <internal, deprecated:mongo> public method switchSlave ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoClient> public method connect ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoClient> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoClient> public method __get ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:mongo, inherits MongoClient> public method selectDB ] {

          - Parameters [1] {
            Parameter #0 [ <required> $database_name ]
          }
        }

        Method [ <internal:mongo, inherits MongoClient> public method selectCollection ] {

          - Parameters [2] {
            Parameter #0 [ <required> $database_name ]
            Parameter #1 [ <optional> $collection_name ]
          }
        }

        Method [ <internal:mongo, inherits MongoClient> public method getReadPreference ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoClient> public method setReadPreference ] {

          - Parameters [2] {
            Parameter #0 [ <required> $read_preference ]
            Parameter #1 [ <optional> array $tags ]
          }
        }

        Method [ <internal:mongo, inherits MongoClient> public method getWriteConcern ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoClient> public method setWriteConcern ] {

          - Parameters [2] {
            Parameter #0 [ <required> $w ]
            Parameter #1 [ <optional> $wtimeout ]
          }
        }

        Method [ <internal:mongo, inherits MongoClient> public method dropDB ] {

          - Parameters [1] {
            Parameter #0 [ <required> $MongoDB_object_OR_database_name ]
          }
        }

        Method [ <internal:mongo, inherits MongoClient> public method listDBs ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoClient> public method getHosts ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoClient> public method close ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:mongo> class MongoDB ] {

      - Constants [3] {
        Constant [ integer PROFILING_OFF ] { 0 }
        Constant [ integer PROFILING_SLOW ] { 1 }
        Constant [ integer PROFILING_ON ] { 2 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [2] {
        Property [ <default> public $w ]
        Property [ <default> public $wtimeout ]
      }

      - Methods [29] {
        Method [ <internal:mongo, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> MongoClient $connection ]
            Parameter #1 [ <required> $database_name ]
          }
        }

        Method [ <internal:mongo> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method __get ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:mongo> public method getGridFS ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $prefix ]
          }
        }

        Method [ <internal, deprecated:mongo> public method getSlaveOkay ] {

          - Parameters [0] {
          }
        }

        Method [ <internal, deprecated:mongo> public method setSlaveOkay ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $slave_okay ]
          }
        }

        Method [ <internal:mongo> public method getReadPreference ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method setReadPreference ] {

          - Parameters [2] {
            Parameter #0 [ <required> $read_preference ]
            Parameter #1 [ <optional> array $tags ]
          }
        }

        Method [ <internal:mongo> public method getWriteConcern ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method setWriteConcern ] {

          - Parameters [2] {
            Parameter #0 [ <required> $w ]
            Parameter #1 [ <optional> $wtimeout ]
          }
        }

        Method [ <internal:mongo> public method getProfilingLevel ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method setProfilingLevel ] {

          - Parameters [1] {
            Parameter #0 [ <required> $level ]
          }
        }

        Method [ <internal:mongo> public method drop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method repair ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $keep_cloned_files ]
            Parameter #1 [ <optional> $backup_original_files ]
          }
        }

        Method [ <internal:mongo> public method selectCollection ] {

          - Parameters [1] {
            Parameter #0 [ <required> $collection_name ]
          }
        }

        Method [ <internal:mongo> public method createCollection ] {

          - Parameters [1] {
            Parameter #0 [ <required> $collection_name ]
          }
        }

        Method [ <internal:mongo> public method dropCollection ] {

          - Parameters [1] {
            Parameter #0 [ <required> $collection_name ]
          }
        }

        Method [ <internal:mongo> public method listCollections ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $includeSystemCollections ]
          }
        }

        Method [ <internal:mongo> public method getCollectionNames ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $includeSystemCollections ]
          }
        }

        Method [ <internal:mongo> public method getCollectionInfo ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $includeSystemCollections ]
          }
        }

        Method [ <internal:mongo> public method createDBRef ] {

          - Parameters [2] {
            Parameter #0 [ <required> $collection_name ]
            Parameter #1 [ <required> $array_with_id_fields_OR_MongoID ]
          }
        }

        Method [ <internal:mongo> public method getDBRef ] {

          - Parameters [1] {
            Parameter #0 [ <required> $reference_information ]
          }
        }

        Method [ <internal:mongo> public method execute ] {

          - Parameters [2] {
            Parameter #0 [ <required> $javascript_code ]
            Parameter #1 [ <optional> array $arguments ]
          }
        }

        Method [ <internal:mongo> public method command ] {

          - Parameters [3] {
            Parameter #0 [ <required> $command ]
            Parameter #1 [ <optional> array or NULL $options ]
            Parameter #2 [ <optional> &$hash ]
          }
        }

        Method [ <internal:mongo> public method lastError ] {
        }

        Method [ <internal, deprecated:mongo> public method prevError ] {
        }

        Method [ <internal, deprecated:mongo> public method resetError ] {
        }

        Method [ <internal, deprecated:mongo> public method forceError ] {
        }

        Method [ <internal, deprecated:mongo> public method authenticate ] {

          - Parameters [2] {
            Parameter #0 [ <required> $username ]
            Parameter #1 [ <required> $password ]
          }
        }
      }
    }

    Class [ <internal:mongo> class MongoCollection ] {

      - Constants [2] {
        Constant [ integer ASCENDING ] { 1 }
        Constant [ integer DESCENDING ] { -1 }
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal, deprecated:mongo> static protected method toIndexString ] {

          - Parameters [1] {
            Parameter #0 [ <required> $string_OR_array_of_keys ]
          }
        }
      }

      - Properties [2] {
        Property [ <default> public $w ]
        Property [ <default> public $wtimeout ]
      }

      - Methods [33] {
        Method [ <internal:mongo, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> MongoDB $database ]
            Parameter #1 [ <required> $collection_name ]
          }
        }

        Method [ <internal:mongo> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method __get ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:mongo> public method getName ] {

          - Parameters [0] {
          }
        }

        Method [ <internal, deprecated:mongo> public method getSlaveOkay ] {

          - Parameters [0] {
          }
        }

        Method [ <internal, deprecated:mongo> public method setSlaveOkay ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $slave_okay ]
          }
        }

        Method [ <internal:mongo> public method getReadPreference ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method setReadPreference ] {

          - Parameters [2] {
            Parameter #0 [ <required> $read_preference ]
            Parameter #1 [ <optional> array $tags ]
          }
        }

        Method [ <internal:mongo> public method getWriteConcern ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method setWriteConcern ] {

          - Parameters [2] {
            Parameter #0 [ <required> $w ]
            Parameter #1 [ <optional> $wtimeout ]
          }
        }

        Method [ <internal:mongo> public method drop ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method validate ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $validate ]
          }
        }

        Method [ <internal:mongo> public method insert ] {

          - Parameters [2] {
            Parameter #0 [ <required> $array_of_fields_OR_object ]
            Parameter #1 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo> public method batchInsert ] {

          - Parameters [2] {
            Parameter #0 [ <required> array $documents ]
            Parameter #1 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo> public method update ] {

          - Parameters [3] {
            Parameter #0 [ <required> $old_array_of_fields_OR_object ]
            Parameter #1 [ <required> $new_array_of_fields_OR_object ]
            Parameter #2 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo> public method remove ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $array_of_fields_OR_object ]
            Parameter #1 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo> public method find ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $query ]
            Parameter #1 [ <optional> $fields ]
          }
        }

        Method [ <internal:mongo> public method findOne ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $query ]
            Parameter #1 [ <optional> $fields ]
            Parameter #2 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo> public method findAndModify ] {

          - Parameters [4] {
            Parameter #0 [ <required> $query ]
            Parameter #1 [ <optional> $update ]
            Parameter #2 [ <optional> $fields ]
            Parameter #3 [ <optional> array or NULL $options ]
          }
        }

        Method [ <internal:mongo> public method createIndex ] {

          - Parameters [2] {
            Parameter #0 [ <required> $array_of_keys ]
            Parameter #1 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo> public method ensureIndex ] {

          - Parameters [2] {
            Parameter #0 [ <required> $key_OR_array_of_keys ]
            Parameter #1 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo> public method deleteIndex ] {

          - Parameters [1] {
            Parameter #0 [ <required> $string_OR_array_of_keys ]
          }
        }

        Method [ <internal:mongo> public method deleteIndexes ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method getIndexInfo ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method count ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $query_AS_array_of_fields_OR_object ]
            Parameter #1 [ <optional> $options_OR_limit ]
            Parameter #2 [ <optional> $skip ]
          }
        }

        Method [ <internal:mongo> public method save ] {

          - Parameters [2] {
            Parameter #0 [ <required> $array_of_fields_OR_object ]
            Parameter #1 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo> public method createDBRef ] {

          - Parameters [1] {
            Parameter #0 [ <required> $array_with_id_fields_OR_MongoID ]
          }
        }

        Method [ <internal:mongo> public method getDBRef ] {

          - Parameters [1] {
            Parameter #0 [ <required> $reference ]
          }
        }

        Method [ <internal:mongo> public method group ] {

          - Parameters [4] {
            Parameter #0 [ <required> $keys_or_MongoCode ]
            Parameter #1 [ <required> $initial_value ]
            Parameter #2 [ <required> $array_OR_MongoCode ]
            Parameter #3 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo> public method distinct ] {

          - Parameters [2] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <optional> $query ]
          }
        }

        Method [ <internal:mongo> public method aggregate ] {

          - Parameters [3] {
            Parameter #0 [ <required> $pipeline ]
            Parameter #1 [ <optional> $op ]
            Parameter #2 [ <optional> $... ]
          }
        }

        Method [ <internal:mongo> public method aggregateCursor ] {

          - Parameters [2] {
            Parameter #0 [ <required> array or NULL $pipeline ]
            Parameter #1 [ <optional> array or NULL $options ]
          }
        }

        Method [ <internal:mongo> public method parallelCollectionScan ] {

          - Parameters [2] {
            Parameter #0 [ <required> $num_cursors ]
            Parameter #1 [ <optional> array $options ]
          }
        }
      }
    }

    Interface [ <internal:mongo> interface MongoCursorInterface extends Iterator, Traversable ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [11] {
        Method [ <internal:mongo> abstract public method batchSize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $number ]
          }
        }

        Method [ <internal:mongo> abstract public method info ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> abstract public method dead ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> abstract public method timeout ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timeoutMS ]
          }
        }

        Method [ <internal:mongo> abstract public method getReadPreference ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> abstract public method setReadPreference ] {

          - Parameters [2] {
            Parameter #0 [ <required> $read_preference ]
            Parameter #1 [ <optional> array $tags ]
          }
        }

        Method [ <internal:Core, inherits Iterator> abstract public method current ] {
        }

        Method [ <internal:Core, inherits Iterator> abstract public method next ] {
        }

        Method [ <internal:Core, inherits Iterator> abstract public method key ] {
        }

        Method [ <internal:Core, inherits Iterator> abstract public method valid ] {
        }

        Method [ <internal:Core, inherits Iterator> abstract public method rewind ] {
        }
      }
    }

    Class [ <internal:mongo> <iterateable> class MongoCursor implements MongoCursorInterface, Traversable, Iterator ] {

      - Constants [0] {
      }

      - Static properties [2] {
        Property [ public static $slaveOkay ]
        Property [ public static $timeout ]
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [32] {
        Method [ <internal:mongo, ctor> public method __construct ] {

          - Parameters [4] {
            Parameter #0 [ <required> MongoClient $connection ]
            Parameter #1 [ <required> $database_and_collection_name ]
            Parameter #2 [ <optional> $query ]
            Parameter #3 [ <optional> $array_of_fields_OR_object ]
          }
        }

        Method [ <internal:mongo> public method hasNext ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method getNext ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method limit ] {

          - Parameters [1] {
            Parameter #0 [ <required> $number ]
          }
        }

        Method [ <internal:mongo, prototype MongoCursorInterface> public method batchSize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $number ]
          }
        }

        Method [ <internal:mongo> public method skip ] {

          - Parameters [1] {
            Parameter #0 [ <required> $number ]
          }
        }

        Method [ <internal:mongo> public method fields ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fields ]
          }
        }

        Method [ <internal:mongo> public method maxTimeMS ] {

          - Parameters [1] {
            Parameter #0 [ <required> $ms ]
          }
        }

        Method [ <internal:mongo> public method addOption ] {

          - Parameters [2] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:mongo> public method snapshot ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method sort ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fields ]
          }
        }

        Method [ <internal:mongo> public method hint ] {

          - Parameters [1] {
            Parameter #0 [ <required> $keyPattern ]
          }
        }

        Method [ <internal:mongo> public method explain ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method setFlag ] {

          - Parameters [2] {
            Parameter #0 [ <required> $bit ]
            Parameter #1 [ <optional> $set ]
          }
        }

        Method [ <internal, deprecated:mongo> public method slaveOkay ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $okay ]
          }
        }

        Method [ <internal:mongo> public method tailable ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $tail ]
          }
        }

        Method [ <internal:mongo> public method immortal ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $liveForever ]
          }
        }

        Method [ <internal:mongo> public method awaitData ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $wait ]
          }
        }

        Method [ <internal:mongo> public method partial ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $okay ]
          }
        }

        Method [ <internal:mongo, prototype MongoCursorInterface> public method getReadPreference ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, prototype MongoCursorInterface> public method setReadPreference ] {

          - Parameters [2] {
            Parameter #0 [ <required> $read_preference ]
            Parameter #1 [ <optional> array $tags ]
          }
        }

        Method [ <internal, deprecated:mongo> final protected method doQuery ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, prototype MongoCursorInterface> public method timeout ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timeoutMS ]
          }
        }

        Method [ <internal:mongo, prototype MongoCursorInterface> public method info ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, prototype MongoCursorInterface> public method dead ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, prototype Iterator> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method reset ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method count ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $foundOnly ]
          }
        }
      }
    }

    Class [ <internal:mongo> <iterateable> class MongoCommandCursor implements MongoCursorInterface, Traversable, Iterator ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:mongo> static public method createFromDocument ] {

          - Parameters [3] {
            Parameter #0 [ <required> MongoClient $connection ]
            Parameter #1 [ <required> $connection_hash ]
            Parameter #2 [ <required> $cursor_document ]
          }
        }
      }

      - Properties [0] {
      }

      - Methods [12] {
        Method [ <internal:mongo, ctor> public method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> MongoClient $connection ]
            Parameter #1 [ <required> $database_and_collection_name ]
            Parameter #2 [ <optional> $query ]
          }
        }

        Method [ <internal:mongo, prototype MongoCursorInterface> public method batchSize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $number ]
          }
        }

        Method [ <internal:mongo, prototype MongoCursorInterface> public method timeout ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timeoutMS ]
          }
        }

        Method [ <internal:mongo, prototype MongoCursorInterface> public method info ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, prototype MongoCursorInterface> public method dead ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, prototype MongoCursorInterface> public method getReadPreference ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, prototype MongoCursorInterface> public method setReadPreference ] {

          - Parameters [2] {
            Parameter #0 [ <required> $read_preference ]
            Parameter #1 [ <optional> array $tags ]
          }
        }

        Method [ <internal:mongo, prototype Iterator> public method current ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:mongo> class MongoGridFS extends MongoCollection ] {

      - Constants [2] {
        Constant [ integer ASCENDING ] { 1 }
        Constant [ integer DESCENDING ] { -1 }
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal, deprecated:mongo, inherits MongoCollection> static protected method toIndexString ] {

          - Parameters [1] {
            Parameter #0 [ <required> $string_OR_array_of_keys ]
          }
        }
      }

      - Properties [5] {
        Property [ <default> public $w ]
        Property [ <default> public $wtimeout ]
        Property [ <default> public $chunks ]
        Property [ <default> protected $filesName ]
        Property [ <default> protected $chunksName ]
      }

      - Methods [39] {
        Method [ <internal:mongo, overwrites MongoCollection, ctor> public method __construct ] {
        }

        Method [ <internal:mongo, overwrites MongoCollection, prototype MongoCollection> public method drop ] {
        }

        Method [ <internal:mongo, overwrites MongoCollection, prototype MongoCollection> public method find ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $query ]
            Parameter #1 [ <optional> $fields ]
          }
        }

        Method [ <internal:mongo> public method storeFile ] {
        }

        Method [ <internal:mongo> public method storeBytes ] {
        }

        Method [ <internal:mongo, overwrites MongoCollection, prototype MongoCollection> public method findOne ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $query ]
            Parameter #1 [ <optional> $fields ]
            Parameter #2 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo, overwrites MongoCollection, prototype MongoCollection> public method remove ] {

          - Parameters [2] {
            Parameter #0 [ <optional> $filename_OR_fields_OR_object ]
            Parameter #1 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo> public method storeUpload ] {
        }

        Method [ <internal:mongo> public method delete ] {
        }

        Method [ <internal:mongo> public method get ] {
        }

        Method [ <internal:mongo> public method put ] {
        }

        Method [ <internal:mongo, inherits MongoCollection> public method __toString ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method __get ] {

          - Parameters [1] {
            Parameter #0 [ <required> $name ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method getName ] {

          - Parameters [0] {
          }
        }

        Method [ <internal, deprecated:mongo, inherits MongoCollection> public method getSlaveOkay ] {

          - Parameters [0] {
          }
        }

        Method [ <internal, deprecated:mongo, inherits MongoCollection> public method setSlaveOkay ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $slave_okay ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method getReadPreference ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method setReadPreference ] {

          - Parameters [2] {
            Parameter #0 [ <required> $read_preference ]
            Parameter #1 [ <optional> array $tags ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method getWriteConcern ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method setWriteConcern ] {

          - Parameters [2] {
            Parameter #0 [ <required> $w ]
            Parameter #1 [ <optional> $wtimeout ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method validate ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $validate ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method insert ] {

          - Parameters [2] {
            Parameter #0 [ <required> $array_of_fields_OR_object ]
            Parameter #1 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method batchInsert ] {

          - Parameters [2] {
            Parameter #0 [ <required> array $documents ]
            Parameter #1 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method update ] {

          - Parameters [3] {
            Parameter #0 [ <required> $old_array_of_fields_OR_object ]
            Parameter #1 [ <required> $new_array_of_fields_OR_object ]
            Parameter #2 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method findAndModify ] {

          - Parameters [4] {
            Parameter #0 [ <required> $query ]
            Parameter #1 [ <optional> $update ]
            Parameter #2 [ <optional> $fields ]
            Parameter #3 [ <optional> array or NULL $options ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method createIndex ] {

          - Parameters [2] {
            Parameter #0 [ <required> $array_of_keys ]
            Parameter #1 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method ensureIndex ] {

          - Parameters [2] {
            Parameter #0 [ <required> $key_OR_array_of_keys ]
            Parameter #1 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method deleteIndex ] {

          - Parameters [1] {
            Parameter #0 [ <required> $string_OR_array_of_keys ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method deleteIndexes ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method getIndexInfo ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method count ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $query_AS_array_of_fields_OR_object ]
            Parameter #1 [ <optional> $options_OR_limit ]
            Parameter #2 [ <optional> $skip ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method save ] {

          - Parameters [2] {
            Parameter #0 [ <required> $array_of_fields_OR_object ]
            Parameter #1 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method createDBRef ] {

          - Parameters [1] {
            Parameter #0 [ <required> $array_with_id_fields_OR_MongoID ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method getDBRef ] {

          - Parameters [1] {
            Parameter #0 [ <required> $reference ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method group ] {

          - Parameters [4] {
            Parameter #0 [ <required> $keys_or_MongoCode ]
            Parameter #1 [ <required> $initial_value ]
            Parameter #2 [ <required> $array_OR_MongoCode ]
            Parameter #3 [ <optional> array $options ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method distinct ] {

          - Parameters [2] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <optional> $query ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method aggregate ] {

          - Parameters [3] {
            Parameter #0 [ <required> $pipeline ]
            Parameter #1 [ <optional> $op ]
            Parameter #2 [ <optional> $... ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method aggregateCursor ] {

          - Parameters [2] {
            Parameter #0 [ <required> array or NULL $pipeline ]
            Parameter #1 [ <optional> array or NULL $options ]
          }
        }

        Method [ <internal:mongo, inherits MongoCollection> public method parallelCollectionScan ] {

          - Parameters [2] {
            Parameter #0 [ <required> $num_cursors ]
            Parameter #1 [ <optional> array $options ]
          }
        }
      }
    }

    Class [ <internal:mongo> class MongoGridFSFile ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [2] {
        Property [ <default> public $file ]
        Property [ <default> protected $gridfs ]
      }

      - Methods [6] {
        Method [ <internal:mongo, ctor> public method __construct ] {
        }

        Method [ <internal:mongo> public method getFilename ] {
        }

        Method [ <internal:mongo> public method getSize ] {
        }

        Method [ <internal:mongo> public method write ] {
        }

        Method [ <internal:mongo> public method getBytes ] {
        }

        Method [ <internal:mongo> public method getResource ] {
        }
      }
    }

    Class [ <internal:mongo> <iterateable> class MongoGridFSCursor extends MongoCursor implements Iterator, Traversable, MongoCursorInterface ] {

      - Constants [0] {
      }

      - Static properties [2] {
        Property [ public static $slaveOkay ]
        Property [ public static $timeout ]
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> protected $gridfs ]
      }

      - Methods [32] {
        Method [ <internal:mongo, overwrites MongoCursor, ctor> public method __construct ] {
        }

        Method [ <internal:mongo, overwrites MongoCursor, prototype MongoCursor> public method getNext ] {
        }

        Method [ <internal:mongo, overwrites MongoCursor, prototype Iterator> public method current ] {
        }

        Method [ <internal:mongo, inherits MongoCursor> public method hasNext ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCursor> public method limit ] {

          - Parameters [1] {
            Parameter #0 [ <required> $number ]
          }
        }

        Method [ <internal:mongo, inherits MongoCursor, prototype MongoCursorInterface> public method batchSize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $number ]
          }
        }

        Method [ <internal:mongo, inherits MongoCursor> public method skip ] {

          - Parameters [1] {
            Parameter #0 [ <required> $number ]
          }
        }

        Method [ <internal:mongo, inherits MongoCursor> public method fields ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fields ]
          }
        }

        Method [ <internal:mongo, inherits MongoCursor> public method maxTimeMS ] {

          - Parameters [1] {
            Parameter #0 [ <required> $ms ]
          }
        }

        Method [ <internal:mongo, inherits MongoCursor> public method addOption ] {

          - Parameters [2] {
            Parameter #0 [ <required> $key ]
            Parameter #1 [ <required> $value ]
          }
        }

        Method [ <internal:mongo, inherits MongoCursor> public method snapshot ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCursor> public method sort ] {

          - Parameters [1] {
            Parameter #0 [ <required> $fields ]
          }
        }

        Method [ <internal:mongo, inherits MongoCursor> public method hint ] {

          - Parameters [1] {
            Parameter #0 [ <required> $keyPattern ]
          }
        }

        Method [ <internal:mongo, inherits MongoCursor> public method explain ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCursor> public method setFlag ] {

          - Parameters [2] {
            Parameter #0 [ <required> $bit ]
            Parameter #1 [ <optional> $set ]
          }
        }

        Method [ <internal, deprecated:mongo, inherits MongoCursor> public method slaveOkay ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $okay ]
          }
        }

        Method [ <internal:mongo, inherits MongoCursor> public method tailable ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $tail ]
          }
        }

        Method [ <internal:mongo, inherits MongoCursor> public method immortal ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $liveForever ]
          }
        }

        Method [ <internal:mongo, inherits MongoCursor> public method awaitData ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $wait ]
          }
        }

        Method [ <internal:mongo, inherits MongoCursor> public method partial ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $okay ]
          }
        }

        Method [ <internal:mongo, inherits MongoCursor, prototype MongoCursorInterface> public method getReadPreference ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCursor, prototype MongoCursorInterface> public method setReadPreference ] {

          - Parameters [2] {
            Parameter #0 [ <required> $read_preference ]
            Parameter #1 [ <optional> array $tags ]
          }
        }

        Method [ <internal, deprecated:mongo, inherits MongoCursor> final protected method doQuery ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCursor, prototype MongoCursorInterface> public method timeout ] {

          - Parameters [1] {
            Parameter #0 [ <required> $timeoutMS ]
          }
        }

        Method [ <internal:mongo, inherits MongoCursor, prototype MongoCursorInterface> public method info ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCursor, prototype MongoCursorInterface> public method dead ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCursor, prototype Iterator> public method key ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCursor, prototype Iterator> public method next ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCursor, prototype Iterator> public method rewind ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCursor, prototype Iterator> public method valid ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCursor> public method reset ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCursor> public method count ] {

          - Parameters [1] {
            Parameter #0 [ <optional> $foundOnly ]
          }
        }
      }
    }

    Class [ <internal:mongo> class MongoWriteBatch ] {

      - Constants [3] {
        Constant [ integer COMMAND_INSERT ] { 1 }
        Constant [ integer COMMAND_UPDATE ] { 2 }
        Constant [ integer COMMAND_DELETE ] { 3 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:mongo, ctor> protected method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <required> MongoCollection $collection ]
            Parameter #1 [ <required> $batch_type ]
            Parameter #2 [ <optional> array $write_options ]
          }
        }

        Method [ <internal:mongo> public method add ] {

          - Parameters [1] {
            Parameter #0 [ <required> $item ]
          }
        }

        Method [ <internal:mongo> final public method execute ] {

          - Parameters [1] {
            Parameter #0 [ <optional> array $write_options ]
          }
        }

        Method [ <internal:mongo> public method getItemCount ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method getBatchInfo ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:mongo> class MongoInsertBatch extends MongoWriteBatch ] {

      - Constants [3] {
        Constant [ integer COMMAND_INSERT ] { 1 }
        Constant [ integer COMMAND_UPDATE ] { 2 }
        Constant [ integer COMMAND_DELETE ] { 3 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:mongo, overwrites MongoWriteBatch, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> MongoCollection $collection ]
            Parameter #1 [ <optional> array $write_options ]
          }
        }

        Method [ <internal:mongo, inherits MongoWriteBatch> public method add ] {

          - Parameters [1] {
            Parameter #0 [ <required> $item ]
          }
        }

        Method [ <internal:mongo, inherits MongoWriteBatch> final public method execute ] {

          - Parameters [1] {
            Parameter #0 [ <optional> array $write_options ]
          }
        }

        Method [ <internal:mongo, inherits MongoWriteBatch> public method getItemCount ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoWriteBatch> public method getBatchInfo ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:mongo> class MongoUpdateBatch extends MongoWriteBatch ] {

      - Constants [3] {
        Constant [ integer COMMAND_INSERT ] { 1 }
        Constant [ integer COMMAND_UPDATE ] { 2 }
        Constant [ integer COMMAND_DELETE ] { 3 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:mongo, overwrites MongoWriteBatch, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> MongoCollection $collection ]
            Parameter #1 [ <optional> array $write_options ]
          }
        }

        Method [ <internal:mongo, inherits MongoWriteBatch> public method add ] {

          - Parameters [1] {
            Parameter #0 [ <required> $item ]
          }
        }

        Method [ <internal:mongo, inherits MongoWriteBatch> final public method execute ] {

          - Parameters [1] {
            Parameter #0 [ <optional> array $write_options ]
          }
        }

        Method [ <internal:mongo, inherits MongoWriteBatch> public method getItemCount ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoWriteBatch> public method getBatchInfo ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:mongo> class MongoDeleteBatch extends MongoWriteBatch ] {

      - Constants [3] {
        Constant [ integer COMMAND_INSERT ] { 1 }
        Constant [ integer COMMAND_UPDATE ] { 2 }
        Constant [ integer COMMAND_DELETE ] { 3 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [5] {
        Method [ <internal:mongo, overwrites MongoWriteBatch, ctor> public method __construct ] {

          - Parameters [2] {
            Parameter #0 [ <required> MongoCollection $collection ]
            Parameter #1 [ <optional> array $write_options ]
          }
        }

        Method [ <internal:mongo, inherits MongoWriteBatch> public method add ] {

          - Parameters [1] {
            Parameter #0 [ <required> $item ]
          }
        }

        Method [ <internal:mongo, inherits MongoWriteBatch> final public method execute ] {

          - Parameters [1] {
            Parameter #0 [ <optional> array $write_options ]
          }
        }

        Method [ <internal:mongo, inherits MongoWriteBatch> public method getItemCount ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoWriteBatch> public method getBatchInfo ] {

          - Parameters [0] {
          }
        }
      }
    }

    Class [ <internal:mongo> class MongoId ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [3] {
        Method [ <internal:mongo> static public method __set_state ] {
        }

        Method [ <internal:mongo> static public method getHostname ] {
        }

        Method [ <internal:mongo> static public method isValid ] {

          - Parameters [1] {
            Parameter #0 [ <required> $id ]
          }
        }
      }

      - Properties [1] {
        Property [ <default> public $$id ]
      }

      - Methods [5] {
        Method [ <internal:mongo, ctor> public method __construct ] {
        }

        Method [ <internal:mongo> public method __toString ] {
        }

        Method [ <internal:mongo> public method getTimestamp ] {
        }

        Method [ <internal:mongo> public method getPID ] {
        }

        Method [ <internal:mongo> public method getInc ] {
        }
      }
    }

    Class [ <internal:mongo> class MongoCode ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [2] {
        Property [ <default> public $code ]
        Property [ <default> public $scope ]
      }

      - Methods [2] {
        Method [ <internal:mongo, ctor> public method __construct ] {
        }

        Method [ <internal:mongo> public method __toString ] {
        }
      }
    }

    Class [ <internal:mongo> class MongoRegex ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [2] {
        Property [ <default> public $regex ]
        Property [ <default> public $flags ]
      }

      - Methods [2] {
        Method [ <internal:mongo, ctor> public method __construct ] {
        }

        Method [ <internal:mongo> public method __toString ] {
        }
      }
    }

    Class [ <internal:mongo> class MongoDate ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [1] {
        Method [ <internal:mongo> static public method __set_state ] {
        }
      }

      - Properties [2] {
        Property [ <default> public $sec ]
        Property [ <default> public $usec ]
      }

      - Methods [3] {
        Method [ <internal:mongo, ctor> public method __construct ] {
        }

        Method [ <internal:mongo> public method __toString ] {
        }

        Method [ <internal:mongo> public method toDateTime ] {
        }
      }
    }

    Class [ <internal:mongo> class MongoBinData ] {

      - Constants [7] {
        Constant [ integer GENERIC ] { 0 }
        Constant [ integer FUNC ] { 1 }
        Constant [ integer BYTE_ARRAY ] { 2 }
        Constant [ integer UUID ] { 3 }
        Constant [ integer UUID_RFC4122 ] { 4 }
        Constant [ integer MD5 ] { 5 }
        Constant [ integer CUSTOM ] { 128 }
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [2] {
        Property [ <default> public $bin ]
        Property [ <default> public $type ]
      }

      - Methods [2] {
        Method [ <internal:mongo, ctor> public method __construct ] {
        }

        Method [ <internal:mongo> public method __toString ] {
        }
      }
    }

    Class [ <internal:mongo> class MongoDBRef ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [3] {
        Method [ <internal:mongo> static public method create ] {
        }

        Method [ <internal:mongo> static public method isRef ] {
        }

        Method [ <internal:mongo> static public method get ] {
        }
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:mongo> class MongoException extends Exception ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:mongo> class MongoConnectionException extends MongoException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:mongo> class MongoCursorException extends MongoException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [5] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
        Property [ <default> private $host ]
      }

      - Methods [11] {
        Method [ <internal:mongo> public method getHost ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:mongo> class MongoCursorTimeoutException extends MongoCursorException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [11] {
        Method [ <internal:mongo, inherits MongoCursorException> public method getHost ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:mongo> class MongoGridFSException extends MongoException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:mongo> class MongoResultException extends MongoException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [6] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
        Property [ <default> public $document ]
        Property [ <default> private $host ]
      }

      - Methods [12] {
        Method [ <internal:mongo> public method getDocument ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo> public method getHost ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:mongo> class MongoWriteConcernException extends MongoCursorException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [5] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
        Property [ <default> private $document ]
      }

      - Methods [12] {
        Method [ <internal:mongo> public method getDocument ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCursorException> public method getHost ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:mongo> class MongoDuplicateKeyException extends MongoWriteConcernException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [12] {
        Method [ <internal:mongo, inherits MongoWriteConcernException> public method getDocument ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:mongo, inherits MongoCursorException> public method getHost ] {

          - Parameters [0] {
          }
        }

        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:mongo> class MongoExecutionTimeoutException extends MongoException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:mongo> class MongoProtocolException extends MongoException ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [4] {
        Property [ <default> protected $message ]
        Property [ <default> protected $code ]
        Property [ <default> protected $file ]
        Property [ <default> protected $line ]
      }

      - Methods [10] {
        Method [ <internal:Core, inherits Exception, ctor> <visibility error> method __construct ] {

          - Parameters [3] {
            Parameter #0 [ <optional> $message ]
            Parameter #1 [ <optional> $code ]
            Parameter #2 [ <optional> $previous ]
          }
        }

        Method [ <internal:Core, inherits Exception> public method __wakeup ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getMessage ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getCode ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getFile ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getLine ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTrace ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getPrevious ] {
        }

        Method [ <internal:Core, inherits Exception> final public method getTraceAsString ] {
        }

        Method [ <internal:Core, inherits Exception> public method __toString ] {
        }
      }
    }

    Class [ <internal:mongo> class MongoTimestamp ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [2] {
        Property [ <default> public $sec ]
        Property [ <default> public $inc ]
      }

      - Methods [2] {
        Method [ <internal:mongo, ctor> public method __construct ] {
        }

        Method [ <internal:mongo> public method __toString ] {
        }
      }
    }

    Class [ <internal:mongo> class MongoInt32 ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> public $value ]
      }

      - Methods [2] {
        Method [ <internal:mongo, ctor> public method __construct ] {
        }

        Method [ <internal:mongo> public method __toString ] {
        }
      }
    }

    Class [ <internal:mongo> class MongoInt64 ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [1] {
        Property [ <default> public $value ]
      }

      - Methods [2] {
        Method [ <internal:mongo, ctor> public method __construct ] {
        }

        Method [ <internal:mongo> public method __toString ] {
        }
      }
    }

    Class [ <internal:mongo> class MongoLog ] {

      - Constants [11] {
        Constant [ integer NONE ] { 0 }
        Constant [ integer WARNING ] { 1 }
        Constant [ integer INFO ] { 2 }
        Constant [ integer FINE ] { 4 }
        Constant [ integer RS ] { 1 }
        Constant [ integer POOL ] { 1 }
        Constant [ integer PARSE ] { 16 }
        Constant [ integer CON ] { 2 }
        Constant [ integer IO ] { 4 }
        Constant [ integer SERVER ] { 8 }
        Constant [ integer ALL ] { 31 }
      }

      - Static properties [3] {
        Property [ private static $level ]
        Property [ private static $module ]
        Property [ private static $callback ]
      }

      - Static methods [6] {
        Method [ <internal:mongo> static public method setLevel ] {
        }

        Method [ <internal:mongo> static public method getLevel ] {
        }

        Method [ <internal:mongo> static public method setModule ] {
        }

        Method [ <internal:mongo> static public method getModule ] {
        }

        Method [ <internal:mongo> static public method setCallback ] {
        }

        Method [ <internal:mongo> static public method getCallback ] {
        }
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:mongo> class MongoPool ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [3] {
        Method [ <internal, deprecated:mongo> static public method info ] {
        }

        Method [ <internal, deprecated:mongo> static public method setSize ] {

          - Parameters [1] {
            Parameter #0 [ <required> $size ]
          }
        }

        Method [ <internal, deprecated:mongo> static public method getSize ] {
        }
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:mongo> class MongoMaxKey ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }

    Class [ <internal:mongo> class MongoMinKey ] {

      - Constants [0] {
      }

      - Static properties [0] {
      }

      - Static methods [0] {
      }

      - Properties [0] {
      }

      - Methods [0] {
      }
    }
  }
}

