Extension [ <persistent> extension #121 libsodium version 1.0.4 ] {

  - Constants [54] {
    Constant [ integer Sodium\CRYPTO_AEAD_AES256GCM_KEYBYTES ] { 32 }
    Constant [ integer Sodium\CRYPTO_AEAD_AES256GCM_NSECBYTES ] { 0 }
    Constant [ integer Sodium\CRYPTO_AEAD_AES256GCM_NPUBBYTES ] { 12 }
    Constant [ integer Sodium\CRYPTO_AEAD_AES256GCM_ABYTES ] { 16 }
    Constant [ integer Sodium\CRYPTO_AEAD_CHACHA20POLY1305_KEYBYTES ] { 32 }
    Constant [ integer Sodium\CRYPTO_AEAD_CHACHA20POLY1305_NSECBYTES ] { 0 }
    Constant [ integer Sodium\CRYPTO_AEAD_CHACHA20POLY1305_NPUBBYTES ] { 8 }
    Constant [ integer Sodium\CRYPTO_AEAD_CHACHA20POLY1305_ABYTES ] { 16 }
    Constant [ integer Sodium\CRYPTO_AUTH_BYTES ] { 32 }
    Constant [ integer Sodium\CRYPTO_AUTH_KEYBYTES ] { 32 }
    Constant [ integer Sodium\CRYPTO_BOX_SEALBYTES ] { 48 }
    Constant [ integer Sodium\CRYPTO_BOX_SECRETKEYBYTES ] { 32 }
    Constant [ integer Sodium\CRYPTO_BOX_PUBLICKEYBYTES ] { 32 }
    Constant [ integer Sodium\CRYPTO_BOX_KEYPAIRBYTES ] { 64 }
    Constant [ integer Sodium\CRYPTO_BOX_MACBYTES ] { 16 }
    Constant [ integer Sodium\CRYPTO_BOX_NONCEBYTES ] { 24 }
    Constant [ integer Sodium\CRYPTO_BOX_SEEDBYTES ] { 32 }
    Constant [ integer Sodium\CRYPTO_KX_BYTES ] { 32 }
    Constant [ integer Sodium\CRYPTO_KX_PUBLICKEYBYTES ] { 32 }
    Constant [ integer Sodium\CRYPTO_KX_SECRETKEYBYTES ] { 32 }
    Constant [ integer Sodium\CRYPTO_GENERICHASH_BYTES ] { 32 }
    Constant [ integer Sodium\CRYPTO_GENERICHASH_BYTES_MIN ] { 16 }
    Constant [ integer Sodium\CRYPTO_GENERICHASH_BYTES_MAX ] { 64 }
    Constant [ integer Sodium\CRYPTO_GENERICHASH_KEYBYTES ] { 32 }
    Constant [ integer Sodium\CRYPTO_GENERICHASH_KEYBYTES_MIN ] { 16 }
    Constant [ integer Sodium\CRYPTO_GENERICHASH_KEYBYTES_MAX ] { 64 }
    Constant [ integer Sodium\CRYPTO_PWHASH_SALTBYTES ] { 16 }
    Constant [ string Sodium\CRYPTO_PWHASH_STRPREFIX ] { $argon2i$ }
    Constant [ integer Sodium\CRYPTO_PWHASH_OPSLIMIT_INTERACTIVE ] { 4 }
    Constant [ integer Sodium\CRYPTO_PWHASH_MEMLIMIT_INTERACTIVE ] { 33554432 }
    Constant [ integer Sodium\CRYPTO_PWHASH_OPSLIMIT_MODERATE ] { 6 }
    Constant [ integer Sodium\CRYPTO_PWHASH_MEMLIMIT_MODERATE ] { 6 }
    Constant [ integer Sodium\CRYPTO_PWHASH_OPSLIMIT_SENSITIVE ] { 8 }
    Constant [ integer Sodium\CRYPTO_PWHASH_MEMLIMIT_SENSITIVE ] { 8 }
    Constant [ integer Sodium\CRYPTO_PWHASH_SCRYPTSALSA208SHA256_SALTBYTES ] { 32 }
    Constant [ string Sodium\CRYPTO_PWHASH_SCRYPTSALSA208SHA256_STRPREFIX ] { $7$ }
    Constant [ integer Sodium\CRYPTO_PWHASH_SCRYPTSALSA208SHA256_OPSLIMIT_INTERACTIVE ] { 524288 }
    Constant [ integer Sodium\CRYPTO_PWHASH_SCRYPTSALSA208SHA256_MEMLIMIT_INTERACTIVE ] { 16777216 }
    Constant [ integer Sodium\CRYPTO_PWHASH_SCRYPTSALSA208SHA256_OPSLIMIT_SENSITIVE ] { 33554432 }
    Constant [ integer Sodium\CRYPTO_PWHASH_SCRYPTSALSA208SHA256_MEMLIMIT_SENSITIVE ] { 1073741824 }
    Constant [ integer Sodium\CRYPTO_SCALARMULT_BYTES ] { 32 }
    Constant [ integer Sodium\CRYPTO_SCALARMULT_SCALARBYTES ] { 32 }
    Constant [ integer Sodium\CRYPTO_SHORTHASH_BYTES ] { 8 }
    Constant [ integer Sodium\CRYPTO_SHORTHASH_KEYBYTES ] { 16 }
    Constant [ integer Sodium\CRYPTO_SECRETBOX_KEYBYTES ] { 32 }
    Constant [ integer Sodium\CRYPTO_SECRETBOX_MACBYTES ] { 16 }
    Constant [ integer Sodium\CRYPTO_SECRETBOX_NONCEBYTES ] { 24 }
    Constant [ integer Sodium\CRYPTO_SIGN_BYTES ] { 64 }
    Constant [ integer Sodium\CRYPTO_SIGN_SEEDBYTES ] { 32 }
    Constant [ integer Sodium\CRYPTO_SIGN_PUBLICKEYBYTES ] { 32 }
    Constant [ integer Sodium\CRYPTO_SIGN_SECRETKEYBYTES ] { 64 }
    Constant [ integer Sodium\CRYPTO_SIGN_KEYPAIRBYTES ] { 96 }
    Constant [ integer Sodium\CRYPTO_STREAM_NONCEBYTES ] { 24 }
    Constant [ integer Sodium\CRYPTO_STREAM_KEYBYTES ] { 32 }
  }

  - Functions {
    Function [ <internal:libsodium> function Sodium\crypto_aead_aes256gcm_is_available ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_aead_aes256gcm_decrypt ] {

      - Parameters [4] {
        Parameter #0 [ <required> $string ]
        Parameter #1 [ <required> $ad ]
        Parameter #2 [ <required> $nonce ]
        Parameter #3 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_aead_aes256gcm_encrypt ] {

      - Parameters [4] {
        Parameter #0 [ <required> $string ]
        Parameter #1 [ <required> $ad ]
        Parameter #2 [ <required> $nonce ]
        Parameter #3 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_aead_chacha20poly1305_decrypt ] {

      - Parameters [4] {
        Parameter #0 [ <required> $string ]
        Parameter #1 [ <required> $ad ]
        Parameter #2 [ <required> $nonce ]
        Parameter #3 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_aead_chacha20poly1305_encrypt ] {

      - Parameters [4] {
        Parameter #0 [ <required> $string ]
        Parameter #1 [ <required> $ad ]
        Parameter #2 [ <required> $nonce ]
        Parameter #3 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_auth ] {

      - Parameters [2] {
        Parameter #0 [ <required> $string ]
        Parameter #1 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_auth_verify ] {

      - Parameters [3] {
        Parameter #0 [ <required> $signature ]
        Parameter #1 [ <required> $string ]
        Parameter #2 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_box ] {

      - Parameters [3] {
        Parameter #0 [ <required> $string ]
        Parameter #1 [ <required> $nonce ]
        Parameter #2 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_box_keypair ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_box_seed_keypair ] {

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_box_keypair_from_secretkey_and_publickey ] {

      - Parameters [2] {
        Parameter #0 [ <required> $secret_key ]
        Parameter #1 [ <required> $public_key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_box_open ] {

      - Parameters [3] {
        Parameter #0 [ <required> $string ]
        Parameter #1 [ <required> $nonce ]
        Parameter #2 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_box_publickey ] {

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_box_publickey_from_secretkey ] {

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_box_seal ] {

      - Parameters [2] {
        Parameter #0 [ <required> $string ]
        Parameter #1 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_box_seal_open ] {

      - Parameters [2] {
        Parameter #0 [ <required> $string ]
        Parameter #1 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_box_secretkey ] {

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_kx ] {

      - Parameters [4] {
        Parameter #0 [ <required> $string_1 ]
        Parameter #1 [ <required> $string_2 ]
        Parameter #2 [ <required> $string_3 ]
        Parameter #3 [ <optional> $string_4 ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_generichash ] {

      - Parameters [3] {
        Parameter #0 [ <required> $string ]
        Parameter #1 [ <optional> $key ]
        Parameter #2 [ <optional> $length ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_generichash_init ] {

      - Parameters [2] {
        Parameter #0 [ <optional> $key ]
        Parameter #1 [ <optional> $length ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_generichash_update ] {

      - Parameters [2] {
        Parameter #0 [ <required> &$state ]
        Parameter #1 [ <required> $string ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_generichash_final ] {

      - Parameters [2] {
        Parameter #0 [ <required> &$state ]
        Parameter #1 [ <optional> $length ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_pwhash ] {

      - Parameters [5] {
        Parameter #0 [ <required> $length ]
        Parameter #1 [ <required> $password ]
        Parameter #2 [ <required> $salt ]
        Parameter #3 [ <required> $opslimit ]
        Parameter #4 [ <required> $memlimit ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_pwhash_str ] {

      - Parameters [3] {
        Parameter #0 [ <required> $password ]
        Parameter #1 [ <required> $opslimit ]
        Parameter #2 [ <required> $memlimit ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_pwhash_str_verify ] {

      - Parameters [2] {
        Parameter #0 [ <required> $hash ]
        Parameter #1 [ <required> $password ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_pwhash_scryptsalsa208sha256 ] {

      - Parameters [5] {
        Parameter #0 [ <required> $length ]
        Parameter #1 [ <required> $password ]
        Parameter #2 [ <required> $salt ]
        Parameter #3 [ <required> $opslimit ]
        Parameter #4 [ <required> $memlimit ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_pwhash_scryptsalsa208sha256_str ] {

      - Parameters [3] {
        Parameter #0 [ <required> $password ]
        Parameter #1 [ <required> $opslimit ]
        Parameter #2 [ <required> $memlimit ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_pwhash_scryptsalsa208sha256_str_verify ] {

      - Parameters [2] {
        Parameter #0 [ <required> $hash ]
        Parameter #1 [ <required> $password ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_scalarmult ] {

      - Parameters [2] {
        Parameter #0 [ <required> $string_1 ]
        Parameter #1 [ <required> $string_2 ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_secretbox ] {

      - Parameters [3] {
        Parameter #0 [ <required> $string ]
        Parameter #1 [ <required> $nonce ]
        Parameter #2 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_secretbox_open ] {

      - Parameters [3] {
        Parameter #0 [ <required> $string ]
        Parameter #1 [ <required> $nonce ]
        Parameter #2 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_shorthash ] {

      - Parameters [2] {
        Parameter #0 [ <required> $string ]
        Parameter #1 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_sign ] {

      - Parameters [2] {
        Parameter #0 [ <required> $string ]
        Parameter #1 [ <required> $keypair ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_sign_detached ] {

      - Parameters [2] {
        Parameter #0 [ <required> $string ]
        Parameter #1 [ <required> $keypair ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_sign_ed25519_pk_to_curve25519 ] {

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_sign_ed25519_sk_to_curve25519 ] {

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_sign_keypair ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_sign_keypair_from_secretkey_and_publickey ] {

      - Parameters [2] {
        Parameter #0 [ <required> $secret_key ]
        Parameter #1 [ <required> $public_key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_sign_open ] {

      - Parameters [2] {
        Parameter #0 [ <required> $string ]
        Parameter #1 [ <required> $keypair ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_sign_publickey ] {

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_sign_secretkey ] {

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_sign_publickey_from_secretkey ] {

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_sign_seed_keypair ] {

      - Parameters [1] {
        Parameter #0 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_sign_verify_detached ] {

      - Parameters [3] {
        Parameter #0 [ <required> $signature ]
        Parameter #1 [ <required> $string ]
        Parameter #2 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_stream ] {

      - Parameters [3] {
        Parameter #0 [ <required> $length ]
        Parameter #1 [ <required> $nonce ]
        Parameter #2 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_stream_xor ] {

      - Parameters [3] {
        Parameter #0 [ <required> $string ]
        Parameter #1 [ <required> $nonce ]
        Parameter #2 [ <required> $key ]
      }
    }
    Function [ <internal:libsodium> function Sodium\randombytes_buf ] {

      - Parameters [1] {
        Parameter #0 [ <required> $length ]
      }
    }
    Function [ <internal:libsodium> function Sodium\randombytes_random16 ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:libsodium> function Sodium\randombytes_uniform ] {

      - Parameters [1] {
        Parameter #0 [ <required> $integer ]
      }
    }
    Function [ <internal:libsodium> function Sodium\bin2hex ] {

      - Parameters [1] {
        Parameter #0 [ <required> $string ]
      }
    }
    Function [ <internal:libsodium> function Sodium\compare ] {

      - Parameters [1] {
        Parameter #0 [ <required> $string ]
      }
    }
    Function [ <internal:libsodium> function Sodium\hex2bin ] {

      - Parameters [2] {
        Parameter #0 [ <required> $string_1 ]
        Parameter #1 [ <required> $string_2 ]
      }
    }
    Function [ <internal:libsodium> function Sodium\increment ] {

      - Parameters [1] {
        Parameter #0 [ <required> $string ]
      }
    }
    Function [ <internal:libsodium> function Sodium\add ] {

      - Parameters [2] {
        Parameter #0 [ <required> $string_1 ]
        Parameter #1 [ <required> $string_2 ]
      }
    }
    Function [ <internal:libsodium> function Sodium\library_version_major ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:libsodium> function Sodium\library_version_minor ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:libsodium> function Sodium\memcmp ] {

      - Parameters [2] {
        Parameter #0 [ <required> $string_1 ]
        Parameter #1 [ <required> $string_2 ]
      }
    }
    Function [ <internal:libsodium> function Sodium\memzero ] {

      - Parameters [2] {
        Parameter #0 [ <required> &$reference ]
        Parameter #1 [ <required> $length ]
      }
    }
    Function [ <internal:libsodium> function Sodium\version_string ] {

      - Parameters [0] {
      }
    }
    Function [ <internal:libsodium> function Sodium\crypto_scalarmult_base ] {

      - Parameters [2] {
        Parameter #0 [ <required> $string_1 ]
        Parameter #1 [ <required> $string_2 ]
      }
    }
  }
}

